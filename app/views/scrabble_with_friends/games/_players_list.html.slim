div.text-center
  h2.space-above3 Players

  table.table.table-bordered style="max-width: 400px; margin: 15px auto;"
    thead
      th.text-center Username
      - if @game.started?
        th.text-center Score
    tbody
      - num_players= @game.players.size
      - @game.players.each do |player|
        tr
          td
            - if @game.game_over? && @game.players.max_by(&:score)&.id == player.id
              i.icon-trophy.space-right2 style="color: green; font-size: 16px;"

            = player.username

            - if current_user_player && player.id == current_user_player.id
              = " (You)"

            - if player.forfeitted?
              = " (Forfeitted)"

            - if game_current_player && game_current_player.id == player.id
              = " (Current Player)"

              - if current_user_player && player.id != current_user_player.id && player.id == game_current_player.id
                  button#send-turn-notification.btn.btn-xs.btn-transparent.space-above.center-block type="button" Still Waiting? Send turn reminder

                  javascript:
                    $(function(){
                      $("button#send-turn-notification").click(function(){
                        var btn = $(this);

                        if(!confirm("You can send a notification to the current player to take their turn.\n\nDo you want to trigger this notification?")){
                          return false;
                        }

                        if(#{raw player.notification_type.nil?}){
                          alert("Cannot send message. Player does not have any notifications enabled.");
                          return false;
                        }

                        $.ajax({
                          url: "#{trigger_turn_notification_game_path(@game)}",
                          method: "POST",
                        }).done(function(){
                          btn.hide();

                          setTimeout(function(){
                            window.alert("Notification sent");
                          }, 500);
                        });
                      });
                    });

            - if current_user_player && player.id == current_user_player.id
              button.btn.btn-xs.btn-transparent.center-block.space-above popovertarget="notification-options" Notification Options

              div#notification-options popover=true style="padding: 20px;"
                h4 Notification Options
                .text-center
                  - if current_user_player.notification_type.present?
                    = link_to "Unsubscribe from #{current_user_player.notification_type == "webpush" ? "Browser" : "Email"} notifications", notifications_unsubscribe_game_path(@game), class: "btn btn-xs btn-transparent", "data-confirm" => "Are you sure you want to unsubscribe from notifications for this game?", "data-method" => "post"
                    button.btn.btn-xs.btn-transparent.disabled.space-left type="button" title="Can only have one notification method enabled at a time" = "#{current_user_player.notification_type != "webpush" ? "Browser Notifications" : "Email"}"
                  - else
                    button#email-subscribe.btn.btn-xs.btn-transparent type="button" Email
                    button#webpush-subscribe.btn.btn-xs.btn-transparent.space-left type="button" Browser Notifications
                    javascript:
                      $(function(){
                        $("button#email-subscribe").click(function(){
                          var email = prompt("What is your email address?");

                          if(!email){
                            alert("No email entered.");
                            return false;
                          }else if(!email.includes("@") && !email.includes(".")){
                            alert("Invalid email entered.")
                            return false;
                          }

                          $.ajax({
                            url: "#{email_subscribe_game_path(@game)}",
                            method: "POST",
                            data: {
                              email: email,
                            },
                          }).done(function(){
                            alert("Subscribed to email notifications.");
                            window.location.reload();
                          });
                        });
                      });

                  button.btn.btn-xs.btn-transparent.space-left type="button" popovertargetaction="hide" popovertarget="notification-options" Cancel

            - if !@game.started? && num_players >= 2
              = link_to remove_player_game_path(@game, player_id: player.id), class: "btn btn-xs btn-danger space-left2", "data-confirm" => "Are you sure you want to remove this player from the game?", "data-method" => :post do
                i.icon-trash

          - if @game.started?
            td = player.score
